name: Create Release with Submodules

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0  # Full history for proper tagging
        
    - name: Create release archive with submodules
      run: |
        # Check if git archive supports --recurse-submodules
        if git archive --help | grep -q "recurse-submodules"; then
          echo "Using git archive with --recurse-submodules"
          git archive --format=tar.gz --recurse-submodules HEAD > release-${GITHUB_REF_NAME}.tar.gz
          git archive --format=zip --recurse-submodules HEAD > release-${GITHUB_REF_NAME}.zip
        else
          echo "Using manual submodule integration"
          # Create a clean working copy with submodules
          git submodule update --init --recursive
          
          # Create temporary directory
          mkdir release-temp
          
          # Copy everything except .git directories
          rsync -av --exclude='.git*' --exclude='.github' . release-temp/
          
          # Create archives
          cd release-temp
          tar -czf ../release-${GITHUB_REF_NAME}.tar.gz .
          zip -r ../release-${GITHUB_REF_NAME}.zip .
          cd ..
          
          # Cleanup
          rm -rf release-temp
        fi
        
        # Create checksums
        sha256sum release-${GITHUB_REF_NAME}.tar.gz > release-${GITHUB_REF_NAME}.tar.gz.sha256 || true
        sha256sum release-${GITHUB_REF_NAME}.zip > release-${GITHUB_REF_NAME}.zip.sha256 || true
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-${{ github.ref_name }}.tar.gz
          release-${{ github.ref_name }}.zip
          release-${{ github.ref_name }}.tar.gz.sha256
          release-${{ github.ref_name }}.zip.sha256
        generate_release_notes: true  # Auto-generate release notes
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}